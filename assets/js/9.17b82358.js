(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{349:function(s,t,e){"use strict";e.r(t);var a=e(12),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"install-tekton-and-build-pipelines"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-tekton-and-build-pipelines"}},[s._v("#")]),s._v(" Install Tekton and build pipelines")]),s._v(" "),e("p",[s._v("Create registry secret for accessing Azure Container Registry:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl create secret docker-registry docker-config "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-server"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pruzickak8smyexampledev.azurecr.io"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-username"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ARM_CLIENT_ID}")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n  --docker-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${ARM_CLIENT_SECRET}")]),s._v('"')]),s._v("\n")])])]),e("p",[s._v("Install Tekton with Dashboard:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("envsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton.yaml           "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton.yaml\nenvsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-dashboard.yaml "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-dashboard.yaml\nenvsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-services.yaml  "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-services.yaml\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --verbose "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Tekton"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository push -q\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent errors like: Error: git repository git@github.com:ruzickap/k8s-flux-repository is not ready to sync (status: cloned)")]),s._v("\nfluxctl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),e("p",[s._v("Prepare Tekton pipelines:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("envsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-pipelineresource.yaml "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-pipelineresource.yaml\nenvsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-task-pipeline.yaml    "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-task-pipeline.yaml\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --verbose "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add pipelines and pipelineresources"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository push -q\nfluxctl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),e("p",[s._v("Initiate "),e("code",[s._v("PipelineRun")]),s._v(" which builds container image form git repository:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("envsubst "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" files/flux-repository/workloads/tekton-pipelinerun.yaml      "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" tmp/k8s-flux-repository/workloads/tekton-pipelinerun.yaml\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" --verbose "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add pipeline and initiate build process"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" -C tmp/k8s-flux-repository push -q\nfluxctl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("\n")])])]),e("p",[s._v("Check if the build of docker image was completed:")]),s._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[s._v("kubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("wait")]),s._v(" --timeout"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("30m --for"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("Succeeded pipelineruns/podinfo-build-docker-image-from-git-pipelinerun\nkubectl get pipelineruns podinfo-build-docker-image-from-git-pipelinerun\n")])])]),e("p",[s._v("Output:")]),s._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("NAME                                              SUCCEEDED   REASON      STARTTIME   COMPLETIONTIME\npodinfo-build-docker-image-from-git-pipelinerun   True        Succeeded   7m48s       2m30s\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);